{"skills": [{"skill_name": "Python Fundamentals", "description": "Learn the basics of Python programming, including variables, data types, and basic operations.", "steps": [{"title": "Variables and Data Types", "explanation": "Understand how to declare variables and assign values of different data types like integers, floats, strings, and booleans. This is the foundation for storing and manipulating data in Python.", "exercise": "Create variables for your name, age, and height, and print their values.", "tip": "Choose descriptive variable names for better readability.", "sub_steps": [{"title": "String Manipulation", "explanation": "Learn to concatenate strings, slice them, and use built-in string methods. Strings are fundamental for working with text data.", "exercise": "Create a string variable, extract a substring, and convert it to uppercase.", "tip": "Use f-strings for easy string formatting.", "status": "not_started"}], "progress": 0, "status": "not_started"}], "overall_progress": 0, "created_at": "2025-03-31 16:56:53"}, {"skill_name": "Basic Video Editing", "description": "Learn the fundamentals of video editing to create engaging content.", "steps": [{"title": "Import and Organize Footage", "explanation": "Import your video clips, audio files, and images into your editing software and organize them for easy access.", "exercise": "Create a new project in your editing software and import 3-5 short video clips. Create bins (folders) to categorize them.", "tip": "Use descriptive names for your files and folders to stay organized.", "sub_steps": [{"title": "Understanding the Interface", "explanation": "Familiarize yourself with the timeline, source monitor, and program monitor.", "exercise": "Locate these key panels in your software.", "tip": "Customize your workspace for optimal workflow.", "status": "not_started"}], "progress": 0, "status": "not_started"}], "overall_progress": 0, "created_at": "2025-03-31 16:58:04"}, {"skill_name": "Cooking Chicken Biryani", "description": "Learn to prepare delicious and aromatic chicken biryani, a popular South Asian dish.", "steps": [{"title": "Prepare the Chicken Marinade", "explanation": "Marinating the chicken infuses it with flavor and tenderizes it. Combine yogurt, ginger-garlic paste, spices, and lemon juice with the chicken and let it rest.", "exercise": "Mix 1 kg chicken with 1 cup yogurt, 2 tbsp ginger-garlic paste, 1 tbsp biryani masala, 1 tsp turmeric, salt to taste, and juice of 1 lemon. Marinate for at least 1 hour.", "tip": "Marinate the chicken overnight for best results.", "sub_steps": [{"title": "Saut\u00e9 Onions and Spices", "explanation": "Fry sliced onions until golden brown and add whole spices to release their aroma. This forms the base flavor of the biryani.", "exercise": "Heat oil, add sliced onions and fry until golden brown. Add bay leaves, cardamom, cloves, and cinnamon sticks and saut\u00e9 for a minute.", "tip": "Fry onions evenly to avoid a bitter taste.", "status": "not_started"}], "progress": 0, "status": "not_started"}], "overall_progress": 0, "created_at": "2025-03-31 17:34:34"}, {"skill_name": "Pokemon Identification", "description": "Learn to identify Pokemon based on their attributes.", "steps": [{"title": "Observe the Appearance", "explanation": "Note the Pokemon's color, shape, and any distinguishing features.", "exercise": "Describe Pikachu's appearance.", "tip": "Pay attention to details like ears, tails, and patterns.", "sub_steps": [{"title": "Identify Key Features", "explanation": "Focus on unique characteristics like horns, wings, or specific markings.", "exercise": "What is unique about Charizard's appearance?", "tip": "Consider what makes the Pokemon stand out.", "status": "not_started"}], "progress": 0, "status": "not_started"}, {"title": "Consider the Type", "explanation": "Determine the Pokemon's type (e.g., Fire, Water, Grass) based on its appearance and abilities.", "exercise": "What type do you think Bulbasaur is?", "tip": "Type often relates to the Pokemon's environment or powers.", "sub_steps": [{"title": "Learn Type Matchups", "explanation": "Understand which types are strong or weak against others.", "exercise": "Which type is effective against Water-type Pokemon?", "tip": "Use a type chart for reference.", "status": "not_started"}], "progress": 0, "status": "not_started"}, {"title": "Research the Pokedex", "explanation": "Use the Pokedex to confirm your identification and learn more about the Pokemon.", "exercise": "Look up a Pokemon in the Pokedex and read its description.", "tip": "The Pokedex provides detailed information about each Pokemon.", "sub_steps": [{"title": "Read the Description", "explanation": "Pay attention to the description, as it often contains clues about the Pokemon's identity and behavior.", "exercise": "What does the Pokedex say about Pikachu's cheeks?", "tip": "Descriptions provide context to physical attributes.", "status": "not_started"}], "progress": 0, "status": "not_started"}], "overall_progress": 0, "created_at": "2025-03-31 17:39:00"}, {"skill_name": "Cooking Pasta Perfectly", "description": "Learn to cook pasta al dente every time.", "steps": [{"title": "Choose the Right Pot", "explanation": "Use a large pot to give the pasta room to cook evenly.", "exercise": "Select a pot that holds at least 6 quarts of water.", "tip": "A wider pot helps prevent sticking.", "sub_steps": [{"title": "Water Amount", "explanation": "Use plenty of water to prevent sticking.", "exercise": "Fill the pot with at least 4 quarts of water per pound of pasta.", "tip": "More water is better than less.", "status": "not_started"}], "progress": 0, "status": "not_started"}, {"title": "Salt the Water Generously", "explanation": "Salt enhances the flavor of the pasta.", "exercise": "Add 1-2 tablespoons of salt per gallon of water.", "tip": "The water should taste like the sea.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Bring Water to a Rolling Boil", "explanation": "Ensure the water is boiling vigorously before adding pasta.", "exercise": "Wait until large bubbles are constantly rising.", "tip": "A strong boil prevents clumping.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Add Pasta and Stir", "explanation": "Add pasta all at once and stir immediately to prevent sticking.", "exercise": "Stir for the first minute or two.", "tip": "Don't overcrowd the pot.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Cook to Al Dente", "explanation": "Cook until the pasta is firm to the bite, not mushy.", "exercise": "Check for doneness 1-2 minutes before the package instructions.", "tip": "Test a strand by tasting it.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Reserve Pasta Water", "explanation": "Before draining, save some of the starchy pasta water.", "exercise": "Scoop out about 1 cup of pasta water.", "tip": "This water helps create a creamy sauce.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Drain Pasta", "explanation": "Drain the pasta quickly but thoroughly.", "exercise": "Use a colander to drain the pasta.", "tip": "Do not rinse the pasta unless making a cold salad.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Combine with Sauce", "explanation": "Immediately toss the drained pasta with your sauce.", "exercise": "Add a little reserved pasta water to adjust the sauce consistency.", "tip": "Serve immediately for the best flavor and texture.", "progress": 0, "status": "not_started", "sub_steps": []}], "overall_progress": 0, "created_at": "2025-03-31 18:03:06"}, {"skill_name": "Cake Baking", "description": "Learn the basics of baking a simple cake.", "steps": [{"title": "Gather Ingredients & Equipment", "explanation": "Collect all necessary ingredients (flour, sugar, eggs, butter, etc.) and equipment (mixing bowls, measuring cups, cake pan, etc.). This ensures a smooth baking process.", "exercise": "List all ingredients and equipment needed for a basic vanilla cake.", "tip": "Read the recipe thoroughly before starting.", "sub_steps": [{"title": "Preheat Oven", "explanation": "Preheating the oven to the correct temperature is crucial for even baking.", "exercise": "Set your oven to 350\u00b0F (175\u00b0C).", "tip": "Use an oven thermometer for accuracy.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Cream Butter & Sugar", "explanation": "Creaming butter and sugar together incorporates air, creating a light and fluffy texture.", "exercise": "Cream softened butter and sugar until pale and fluffy.", "tip": "Use room temperature butter for best results.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Add Eggs", "explanation": "Incorporate eggs one at a time, mixing well after each addition. This ensures proper emulsification.", "exercise": "Add eggs to the creamed butter and sugar mixture, one at a time, mixing well after each addition.", "tip": "Avoid overmixing.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Combine Dry Ingredients", "explanation": "Whisk together dry ingredients (flour, baking powder, salt) separately. This ensures even distribution of leavening agents.", "exercise": "Whisk together flour, baking powder, and salt in a separate bowl.", "tip": "Sifting dry ingredients can improve texture.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Alternate Wet & Dry Ingredients", "explanation": "Gradually add dry ingredients to the wet ingredients, alternating with milk or other liquid. This prevents gluten development and a tough cake.", "exercise": "Gradually add the dry ingredients to the wet ingredients, alternating with milk.", "tip": "Start and end with dry ingredients.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Pour Batter into Pan", "explanation": "Pour the cake batter into a prepared cake pan (greased and floured).", "exercise": "Pour the batter into a greased and floured cake pan.", "tip": "Use parchment paper for easy removal.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Bake the Cake", "explanation": "Bake the cake in the preheated oven until a toothpick inserted into the center comes out clean.", "exercise": "Bake the cake for the time specified in your recipe, checking for doneness with a toothpick.", "tip": "Avoid opening the oven door frequently.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Cool & Frost", "explanation": "Allow the cake to cool completely before frosting. This prevents the frosting from melting.", "exercise": "Cool the cake completely on a wire rack before frosting.", "tip": "Level the cake layers for even frosting.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}], "overall_progress": 0, "created_at": "2025-03-31 18:07:20"}, {"skill_name": "Debugging", "description": "Finding and fixing errors in code.", "steps": [{"title": "Understand the Error", "explanation": "Read the error message and understand what it means. Identify the line of code where the error occurred.", "exercise": "Examine a sample error message and identify the error type and location.", "tip": "Use a search engine to research unfamiliar error messages.", "sub_steps": [{"title": "Read Error Logs", "explanation": "Examine logs for more detailed information about the error's context.", "exercise": "Practice interpreting a sample log file.", "tip": "Look for patterns and related errors.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Reproduce the Error", "explanation": "Try to reproduce the error consistently. This helps isolate the problem.", "exercise": "Write a test case that consistently triggers the error.", "tip": "Note the exact steps that lead to the error.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Isolate the Problem", "explanation": "Narrow down the source of the error. Comment out sections of code or use print statements to track variable values.", "exercise": "Use print statements to track the value of a variable before and after a function call.", "tip": "Divide and conquer: comment out large sections of code to see if the error persists.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Fix the Error", "explanation": "Correct the code based on your understanding of the error. This might involve changing variable assignments, logic, or syntax.", "exercise": "Correct the error in the test case you created.", "tip": "Make small, incremental changes and test frequently.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Test Thoroughly", "explanation": "Ensure the fix doesn't introduce new errors. Run all relevant test cases.", "exercise": "Run all test cases after applying the fix.", "tip": "Consider edge cases and boundary conditions.", "progress": 0, "status": "not_started", "sub_steps": []}], "overall_progress": 0, "created_at": "2025-03-31 18:08:44"}, {"skill_name": "C++ Fundamentals", "description": "Learn the basics of C++ programming, including syntax, data types, and control flow.", "steps": [{"title": "Setting up your Environment", "explanation": "Install a C++ compiler (like g++) and a code editor (like VS Code or Code::Blocks). Verify the installation by compiling a simple 'Hello, World!' program.", "exercise": "Write and compile a 'Hello, World!' program.", "tip": "Ensure your compiler is added to your system's PATH environment variable for easy access.", "sub_steps": [{"title": "Installing a Compiler", "explanation": "Download and install a C++ compiler suite like MinGW (Windows) or use the system's default (Linux/macOS).", "exercise": "Follow the installation instructions for your chosen compiler.", "tip": "Refer to online tutorials for specific compiler installations.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Variables and Data Types", "explanation": "Understand fundamental data types like int, float, char, and bool. Learn how to declare and initialize variables of these types.", "exercise": "Declare variables of different data types and assign them values.", "tip": "Choose appropriate data types based on the kind of data you're storing.", "sub_steps": [{"title": "Declaring Variables", "explanation": "Declare variables using the syntax: `data_type variable_name;`.", "exercise": "Declare an integer variable named 'age'.", "tip": "Variable names should be descriptive and follow naming conventions.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Operators", "explanation": "Learn about arithmetic, comparison, and logical operators in C++. Understand their precedence and usage.", "exercise": "Write expressions using different operators and evaluate their results.", "tip": "Use parentheses to control the order of operations.", "sub_steps": [{"title": "Arithmetic Operators", "explanation": "Understand operators like +, -, *, /, and % (modulo).", "exercise": "Calculate the sum, difference, product, quotient, and remainder of two numbers.", "tip": "Be mindful of integer division (truncation).", "status": "not_started"}], "progress": 0, "status": "not_started"}, {"title": "Input and Output", "explanation": "Learn how to use `std::cin` for input and `std::cout` for output. Practice reading data from the user and displaying results.", "exercise": "Write a program that takes user input and displays it back.", "tip": "Include the `<iostream>` header file.", "sub_steps": [{"title": "Using std::cout", "explanation": "Use `std::cout << variable << \"text\" << std::endl;` to print to the console.", "exercise": "Print the value of an integer variable along with a descriptive message.", "tip": "`std::endl` inserts a newline character.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Control Flow: If-Else Statements", "explanation": "Learn how to use `if`, `else if`, and `else` statements to control the flow of execution based on conditions.", "exercise": "Write a program that checks if a number is positive, negative, or zero.", "tip": "Use curly braces `{}` to enclose blocks of code within if-else statements.", "sub_steps": [{"title": "If Statement", "explanation": "Execute a block of code only if a condition is true: `if (condition) { // code }`.", "exercise": "Check if a variable is greater than 10 and print a message if it is.", "tip": "Conditions are boolean expressions (true or false).", "status": "not_started"}], "progress": 0, "status": "not_started"}, {"title": "Control Flow: Loops", "explanation": "Learn about `for`, `while`, and `do-while` loops. Understand how to iterate over a block of code multiple times.", "exercise": "Write a program that prints numbers from 1 to 10 using a loop.", "tip": "Be careful to avoid infinite loops.", "sub_steps": [{"title": "For Loop", "explanation": "Execute a block of code a fixed number of times: `for (initialization; condition; increment) { // code }`.", "exercise": "Print the squares of numbers from 1 to 5 using a for loop.", "tip": "Initialization, condition, and increment are all optional (but usually present).", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}], "overall_progress": 0, "created_at": "2025-03-31 18:12:37"}, {"skill_name": "Java Programming Fundamentals", "description": "Learn the basic concepts of Java programming.", "steps": [{"title": "Setting up the Development Environment", "explanation": "Install the Java Development Kit (JDK) and a suitable Integrated Development Environment (IDE) like IntelliJ IDEA or Eclipse.", "exercise": "Download and install the latest JDK. Then, download and install IntelliJ IDEA Community Edition.", "tip": "Ensure your PATH environment variable is correctly configured to include the JDK's bin directory.", "sub_steps": [{"title": "JDK Installation", "explanation": "Download the correct JDK version for your operating system from Oracle's website.", "exercise": "Follow the installation instructions provided by Oracle.", "tip": "Choose a stable version of the JDK.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Writing Your First Java Program", "explanation": "Create a simple \"Hello, World!\" program to understand the basic structure of a Java program.", "exercise": "Write a program that prints \"Hello, World!\" to the console.", "tip": "Remember to save your file with a .java extension and the class name must match the filename.", "sub_steps": [{"title": "Class Declaration", "explanation": "Every Java program must have at least one class.", "exercise": "Create a class named `HelloWorld`.", "tip": "Class names should start with an uppercase letter.", "status": "not_started"}], "progress": 0, "status": "not_started"}, {"title": "Understanding Variables and Data Types", "explanation": "Learn about different data types like int, float, String, and boolean, and how to declare and initialize variables.", "exercise": "Declare variables of different data types and assign them values.", "tip": "Choose the appropriate data type based on the type of data you want to store.", "sub_steps": [{"title": "Declaring Variables", "explanation": "Declare a variable by specifying its data type and name.", "exercise": "Declare an integer variable named `age`.", "tip": "Variable names should be descriptive and follow camelCase convention.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Control Flow Statements", "explanation": "Learn about conditional statements (if-else) and loops (for, while) to control the flow of execution.", "exercise": "Write a program that uses an if-else statement to check if a number is positive or negative.", "tip": "Use indentation to make your code more readable.", "sub_steps": [{"title": "If-Else Statements", "explanation": "Execute different blocks of code based on a condition.", "exercise": "Write an if-else statement that checks if a variable `x` is greater than 10.", "tip": "Use curly braces to enclose the code blocks within the if and else statements.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Working with Arrays", "explanation": "Understand how to declare, initialize, and access elements in an array.", "exercise": "Create an array of integers and print each element to the console.", "tip": "Array indices start at 0.", "sub_steps": [{"title": "Array Declaration", "explanation": "Declare an array by specifying its data type and size.", "exercise": "Declare an array of 5 integers.", "tip": "Arrays have a fixed size once declared.", "status": "not_started"}], "progress": 0, "status": "not_started"}], "overall_progress": 0, "created_at": "2025-03-31 18:16:11"}, {"skill_name": "JavaScript Fundamentals", "description": "Learn the basics of JavaScript programming.", "steps": [{"title": "Variables and Data Types", "explanation": "Understand how to declare variables and use different data types like numbers, strings, and booleans. Variables store data, and data types define the kind of data.", "exercise": "Declare a variable named 'age' and assign it a number. Declare a variable named 'name' and assign it a string.", "tip": "Use descriptive variable names for better readability.", "sub_steps": [{"title": "Declaring Variables", "explanation": "Use 'let', 'const', or 'var' to declare variables. 'const' is for constants, 'let' for variables that can change, and 'var' is older syntax.", "exercise": "Declare a constant named 'PI' and assign it the value 3.14159.", "tip": "Prefer 'const' and 'let' over 'var' for modern JavaScript.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Operators", "explanation": "Learn how to use operators to perform calculations and comparisons. Operators include arithmetic (+, -, *, /), assignment (=), and comparison (==, ===, >, <).", "exercise": "Calculate the sum of two numbers using the '+' operator.", "tip": "Understand the difference between '==' (loose equality) and '===' (strict equality).", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": [{"question": "Which operator is used for adding two numbers?", "options": ["+", "-", "*", "/"], "correctIndex": 0, "explanation": "The '+' operator performs addition."}, {"question": "What does the '===' operator check for?", "options": ["Loose equality", "Strict equality", "Assignment", "Addition"], "correctIndex": 1, "explanation": "'===' checks for strict equality (value and type)."}, {"question": "Which operator assigns a value to a variable?", "options": ["+", "==", "=", "==="], "correctIndex": 2, "explanation": "The '=' operator is used for assignment."}]}}, {"title": "Control Flow", "explanation": "Learn how to control the flow of your code using conditional statements (if/else) and loops (for, while). Control flow determines the order in which code is executed.", "exercise": "Write an 'if' statement that checks if a number is greater than 10.", "tip": "Use indentation to make your code more readable.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": [{"question": "What determines the order of code execution?", "options": ["Control flow", "Variable declaration", "Function definition", "Compiler settings"], "correctIndex": 0, "explanation": "Control flow dictates the order in which statements are executed."}, {"question": "Which statement is used for conditional execution?", "options": ["for", "while", "if/else", "return"], "correctIndex": 2, "explanation": "if/else statements allow code to be executed based on conditions."}, {"question": "Why is indentation important in control flow?", "options": ["It affects code execution", "It improves code readability", "It reduces compilation time", "It's required by the compiler"], "correctIndex": 1, "explanation": "Indentation enhances code readability, making the structure clear."}]}}, {"title": "Functions", "explanation": "Understand how to define and call functions to reuse code. Functions are blocks of code that perform a specific task.", "exercise": "Create a function that takes two numbers as input and returns their sum.", "tip": "Give your functions descriptive names.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": [{"question": "What is the primary benefit of using functions in programming?", "options": ["To reuse code blocks", "To make code run faster", "To confuse other programmers", "To increase code length"], "correctIndex": 0, "explanation": "Functions allow you to reuse the same block of code multiple times, reducing redundancy."}, {"question": "What is the purpose of giving functions descriptive names?", "options": ["To make the code compile faster", "To improve code readability and understanding", "To confuse debuggers", "It has no purpose"], "correctIndex": 1, "explanation": "Descriptive names make it easier to understand what a function does without examining its code."}, {"question": "What does a function that 'takes two numbers as input and returns their sum' do?", "options": ["Prints the numbers to the console", "Multiplies the two numbers", "Adds the two numbers together", "Subtracts the two numbers"], "correctIndex": 2, "explanation": "The function adds the two input numbers and returns the result of the addition."}]}}], "overall_progress": 0, "created_at": "2025-03-31 18:26:20"}, {"skill_name": "Basic Filming Techniques", "description": "Learn fundamental filming techniques to improve video quality.", "steps": [{"title": "Framing and Composition", "explanation": "Proper framing guides the viewer's eye and enhances visual storytelling. Use rules like the rule of thirds.", "exercise": "Shoot the same subject using different framing techniques (close-up, wide shot, rule of thirds).", "tip": "Avoid centering your subject unless intentionally for symmetry.", "sub_steps": [{"title": "Rule of Thirds", "explanation": "Divide the frame into nine equal parts and place key elements along the lines or intersections.", "exercise": "Practice framing a landscape scene using the rule of thirds.", "tip": "Most cameras have a rule of thirds grid overlay option.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": [{"question": "What is the primary purpose of proper framing?", "options": ["To guide the viewer's eye and enhance storytelling", "To make the subject appear larger", "To use as many colors as possible", "To blur the background"], "correctIndex": 0, "explanation": "Proper framing directs the viewer's attention and strengthens the narrative."}, {"question": "Which rule is commonly used to improve composition?", "options": ["Rule of Halves", "Rule of Thirds", "Rule of Fifths", "Rule of Quarters"], "correctIndex": 1, "explanation": "The rule of thirds divides the image into nine equal parts, helping to create balanced and interesting compositions."}, {"question": "When should you intentionally center your subject?", "options": ["Always", "Never", "When aiming for symmetry", "When using a wide-angle lens"], "correctIndex": 2, "explanation": "Centering works well when you want to emphasize symmetry or balance in the scene."}]}}, {"title": "Camera Stability", "explanation": "Stable footage is crucial for a professional look. Use a tripod or stabilize your camera.", "exercise": "Film a short scene handheld and then with a tripod. Compare the stability.", "tip": "If handheld, brace against a solid object or use your body for stability.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Lighting Basics", "explanation": "Good lighting is essential for clear and visually appealing footage. Avoid harsh backlighting.", "exercise": "Film a subject in different lighting conditions (natural light, artificial light).", "tip": "Natural light is often the best option, especially during the golden hours (sunrise and sunset).", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": [{"question": "What type of lighting is generally considered best for filming?", "options": ["Natural light", "Harsh backlighting", "Artificial light", "Fluorescent light"], "correctIndex": 0, "explanation": "Natural light often provides the most pleasing and balanced illumination."}, {"question": "What should you avoid when filming a subject?", "options": ["Soft lighting", "Natural light", "Harsh backlighting", "Golden hour"], "correctIndex": 2, "explanation": "Harsh backlighting can create silhouettes and make it difficult to see the subject clearly."}, {"question": "What are the 'golden hours' known for in filmmaking?", "options": ["Midday sun", "Sunrise and sunset", "Overcast days", "Indoor lighting"], "correctIndex": 1, "explanation": "The golden hours provide warm, soft light ideal for filming."}]}}, {"title": "Audio Quality", "explanation": "Clear audio is just as important as video. Use an external microphone if possible.", "exercise": "Record audio with the built-in microphone and an external microphone. Compare the quality.", "tip": "Minimize background noise during recording.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Focusing Techniques", "explanation": "Sharp focus keeps your subject clear and prevents blurry footage. Use autofocus or manual focus.", "exercise": "Practice focusing on different subjects at varying distances.", "tip": "Use focus peaking (if available) to ensure sharp focus.", "progress": 0, "status": "not_started", "sub_steps": []}], "overall_progress": 0, "created_at": "2025-03-31 18:39:14"}, {"skill_name": "Effective Editing", "description": "Improving written content through review and revision.", "steps": [{"title": "Read for Understanding", "explanation": "First, read the entire piece to grasp the overall argument and flow. Avoid focusing on minor errors initially.", "exercise": "Read a short article and summarize its main points.", "tip": "Print the document for easier reading.", "sub_steps": [{"title": "Identify the Core Argument", "explanation": "Pinpoint the central thesis or purpose of the writing.", "exercise": "Write down the main argument in one sentence.", "tip": "Highlight the thesis statement.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Check for Clarity and Coherence", "explanation": "Ensure each sentence and paragraph logically connects to the next. Look for confusing language or gaps in reasoning.", "exercise": "Identify a paragraph where the connection to the previous paragraph is weak and rewrite it.", "tip": "Read the text aloud to identify awkward phrasing.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Review Grammar and Mechanics", "explanation": "Focus on correcting errors in grammar, punctuation, spelling, and capitalization. Use grammar tools as a supplement.", "exercise": "Correct all grammatical errors in a provided paragraph.", "tip": "Focus on one type of error at a time (e.g., only commas).", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Refine Word Choice", "explanation": "Replace vague or repetitive words with more precise and impactful alternatives. Use a thesaurus strategically.", "exercise": "Find three instances of weak word choice in your writing and replace them.", "tip": "Avoid using overly complex vocabulary unnecessarily.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Cut Unnecessary Words", "explanation": "Eliminate redundant phrases and filler words to make the writing more concise. Be ruthless in removing anything that doesn't add value.", "exercise": "Reduce the word count of a paragraph by 10% without losing meaning.", "tip": "Look for phrases like 'in order to' or 'due to the fact that'.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Verify Facts and Citations", "explanation": "Ensure all factual claims are accurate and properly cited. Check sources to confirm information.", "exercise": "Verify the accuracy of three facts in a research paper.", "tip": "Keep a record of all sources used.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Seek Feedback", "explanation": "Ask someone else to read your work and provide constructive criticism. Be open to suggestions for improvement.", "exercise": "Have a friend or colleague review your writing and provide feedback.", "tip": "Ask specific questions to guide the feedback process.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Final Review", "explanation": "After incorporating feedback, do one last read-through to catch any remaining errors. Ensure the writing is polished and ready for its intended audience.", "exercise": "Review the document one last time before submission.", "tip": "Take a break before the final review for a fresh perspective.", "progress": 0, "status": "not_started", "sub_steps": []}], "overall_progress": 0, "created_at": "2025-03-31 19:32:54"}, {"skill_name": "Pokemon Team Building", "description": "Creating a balanced and effective Pokemon team.", "steps": [{"title": "Choose a Starter", "explanation": "Select a Pokemon that appeals to you and covers different types.", "exercise": "Pick a starter Pokemon from any generation and note its type.", "tip": "Consider the strengths and weaknesses of each starter.", "sub_steps": [{"title": "Analyze Type Matchups", "explanation": "Understand which types are strong or weak against your starter's type.", "exercise": "List three types your starter is strong against and three it's weak against.", "tip": "Use a type chart for reference.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": []}}, {"title": "Cover Type Weaknesses", "explanation": "Select Pokemon that resist your starter's weaknesses.", "exercise": "Find a Pokemon that resists a type your starter is weak to.", "tip": "Dual-type Pokemon can cover multiple weaknesses.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Add Offensive Coverage", "explanation": "Include Pokemon with move types that hit common threats.", "exercise": "Find a Pokemon with a move that is super effective against a common type like Water or Fire.", "tip": "Variety is key for offensive power.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Consider a Special Wall", "explanation": "Include a Pokemon with high Special Defense.", "exercise": "Research Pokemon with high Special Defense stats.", "tip": "Special Walls can withstand powerful special attacks.", "progress": 0, "status": "not_started", "sub_steps": []}, {"title": "Consider a Physical Wall", "explanation": "Include a Pokemon with high Defense.", "exercise": "Research Pokemon with high Defense stats.", "tip": "Physical Walls can withstand powerful physical attacks.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": [{"question": "What is the primary role of a Physical Wall Pokemon?", "options": ["To withstand powerful physical attacks.", "To deal high special attack damage.", "To set up entry hazards.", "To boost the team's speed."], "correctIndex": 0, "explanation": "Physical Walls are designed to absorb physical damage."}, {"question": "Which stat is most important for a Physical Wall?", "options": ["Attack", "Special Attack", "Defense", "Speed"], "correctIndex": 2, "explanation": "High Defense allows a Pokemon to take less damage from physical moves."}, {"question": "What should you consider when choosing a Physical Wall?", "options": ["Its offensive capabilities", "Its ability to learn many TMs", "Its type matchups against common physical attackers", "Its rarity"], "correctIndex": 2, "explanation": "Type matchups determine effectiveness against different physical attack types."}]}}, {"title": "Include a Fast Pokemon", "explanation": "Add a Pokemon with high Speed for outspeeding opponents.", "exercise": "Find a Pokemon known for its high Speed stat.", "tip": "Speed allows you to attack first.", "progress": 0, "status": "not_started", "sub_steps": []}], "overall_progress": 0, "created_at": "2025-03-31 19:33:44"}, {"skill_name": "Chocolate Tempering", "description": "The process of stabilizing cocoa butter crystals in chocolate for a smooth, glossy finish.", "steps": [{"title": "Melt the Chocolate", "explanation": "Gently melt about 2/3 of your chocolate to a specific temperature (check your chocolate type). Use a double boiler or microwave in short intervals.", "exercise": "Melt 8 ounces of dark chocolate using a double boiler, aiming for 115\u00b0F (46\u00b0C).", "tip": "Avoid overheating; burnt chocolate is unusable.", "sub_steps": [{"title": "Temperature Check", "explanation": "Use a thermometer to accurately monitor the chocolate's temperature during melting.", "exercise": "Check the chocolate's temperature every 30 seconds while melting.", "tip": "An accurate thermometer is crucial for tempering.", "status": "not_started"}], "progress": 0, "status": "not_started", "mcqs": {"questions": [{"question": "Why is it important to gently melt chocolate?", "options": ["To prevent burning and maintain usability.", "To make the chocolate easier to stir.", "To add a glossy shine to the chocolate.", "To reduce the melting time significantly."], "correctIndex": 0, "explanation": "Gently melting prevents burning, which renders the chocolate unusable."}, {"question": "What is the recommended method for melting chocolate?", "options": ["Directly in a saucepan over high heat.", "Using a double boiler or microwave in short intervals.", "In the oven at 350\u00b0F (175\u00b0C).", "Adding water to the chocolate while heating."], "correctIndex": 1, "explanation": "A double boiler or short microwave intervals help control the heat and prevent burning."}, {"question": "What is the target temperature for melting dark chocolate using a double boiler?", "options": ["100\u00b0F (38\u00b0C)", "115\u00b0F (46\u00b0C)", "130\u00b0F (54\u00b0C)", "150\u00b0F (65\u00b0C)"], "correctIndex": 1, "explanation": "The ideal temperature for melting dark chocolate is around 115\u00b0F (46\u00b0C)."}]}}, {"title": "Cool the Chocolate", "explanation": "Add the remaining 1/3 of unmelted chocolate to 'seed' the melted chocolate. Stir continuously to lower the temperature.", "exercise": "Add 4 ounces of unmelted dark chocolate to the melted chocolate and stir until the temperature reaches 88-89\u00b0F (31-32\u00b0C).", "tip": "Adding unmelted chocolate helps create stable crystals.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": [{"question": "What is the purpose of adding unmelted chocolate to melted chocolate?", "options": ["To lower the temperature and create stable crystals.", "To increase the sweetness of the chocolate.", "To make the chocolate easier to stir.", "To add more volume to the melted chocolate."], "correctIndex": 0, "explanation": "Adding unmelted chocolate 'seeds' the melted chocolate, promoting stable crystal formation and lowering the temperature."}, {"question": "At what temperature should dark chocolate reach after adding unmelted chocolate?", "options": ["95-96\u00b0F (35-36\u00b0C)", "88-89\u00b0F (31-32\u00b0C)", "75-76\u00b0F (24-25\u00b0C)", "100-101\u00b0F (37-38\u00b0C)"], "correctIndex": 1, "explanation": "The ideal temperature for dark chocolate after seeding is 88-89\u00b0F (31-32\u00b0C)."}, {"question": "How much unmelted dark chocolate should be added to the melted chocolate?", "options": ["2 ounces", "6 ounces", "4 ounces", "8 ounces"], "correctIndex": 2, "explanation": "The recipe specifies adding 4 ounces of unmelted dark chocolate."}]}}, {"title": "Test the Temper", "explanation": "Dip a knife or spatula into the chocolate and let it set at room temperature. Properly tempered chocolate will harden quickly with a glossy finish.", "exercise": "Dip a knife into your tempered chocolate and observe how it sets.", "tip": "If the chocolate streaks or doesn't harden, it's not properly tempered.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}, {"title": "Maintain Temperature", "explanation": "Keep the tempered chocolate within its working temperature range (around 88-90\u00b0F for dark chocolate) by gently warming it as needed.", "exercise": "Use a heat lamp or warm water bath to maintain the chocolate's temperature.", "tip": "Consistent temperature is key to maintaining the temper.", "progress": 0, "status": "not_started", "sub_steps": [], "mcqs": {"questions": []}}], "overall_progress": 0, "created_at": "2025-03-31 19:44:07"}], "streaks": ["2025-03-31"], "last_active": "2025-03-31"}